#pragma config(Motor,  port1,           backLeft,      tmotorVex393HighSpeed_HBridge, openLoop)
#pragma config(Motor,  port2,           backRight,     tmotorVex393HighSpeed_MC29, openLoop)
#pragma config(Motor,  port3,           frontLeft,     tmotorVex393HighSpeed_MC29, openLoop)
#pragma config(Motor,  port4,           frontRight,    tmotorVex393HighSpeed_MC29, openLoop)
#pragma config(Motor,  port5,           LeftArm,       tmotorVex393HighSpeed_MC29, openLoop)
#pragma config(Motor,  port6,           RightArm,      tmotorVex393HighSpeed_MC29, openLoop)
#pragma config(Motor,  port7,           LeftArmPinch,  tmotorVex393HighSpeed_MC29, openLoop)
#pragma config(Motor,  port8,           RightArmPinch, tmotorVex393HighSpeed_MC29, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

int SPEED = 120;
int TIME = 5; //in seconds

void armForward (int speed){
	motor [LeftArm] = speed;
	motor [RightArm] = speed;
}

void armBackward () {
	motor[LeftArm] = 127;
	motor[RightArm] = 127;
}

void pinchOpen () {
	motor [LeftArmPinch] = -63;
	motor [RightArmPinch] = -63;
}

void pinchClose () {
	motor [LeftArmPinch] = 63;
	motor [RightArmPinch] = 63;
}

	task main() {

		while(autonomous) {

			motor[backLeft] = SPEED;
			motor[backRight] = SPEED;
			motor[frontLeft] = SPEED;
			motor[frontRight] = SPEED;
			wait1Msec(TIME * 1000);
			motor[backLeft] = 0;
			motor[backRight] = 0;
			motor[frontLeft] = 0;
			motor[frontRight] = 0;

			pinchOpen();
			wait1Msec(2000);
			armForward(SPEED);
			pinchClose();
			armBackward();
			motor[backLeft] = -SPEED;
			motor[backRight] = -SPEED;
			motor[frontLeft] = -SPEED;
			motor[frontRight]= -SPEED;
			wait1Msec(TIME*1000);
			motor[backLeft] = 0;
			motor[backRight] = 0;
			motor[frontLeft] = 0;
			motor[frontRight] = 0;
			pinchOpen();
		}
	}
