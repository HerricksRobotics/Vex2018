#pragma config(Sensor, in1,    liftAngle,      sensorPotentiometer)
#pragma config(Motor,  port1,           rightBack,     tmotorVex393HighSpeed_HBridge, openLoop, reversed)
#pragma config(Motor,  port2,           leftBack,      tmotorVex393HighSpeed_MC29, openLoop)
#pragma config(Motor,  port3,           rightFront,    tmotorVex393HighSpeed_MC29, openLoop)
#pragma config(Motor,  port4,           leftFront,     tmotorVex393HighSpeed_MC29, openLoop, reversed)
#pragma config(Motor,  port5,           mobileLift,    tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port6,           leftArmT,      tmotorVex393HighSpeed_MC29, openLoop, reversed)
#pragma config(Motor,  port7,           frontMotor,    tmotorVex393HighSpeed_MC29, openLoop)
#pragma config(Motor,  port8,           rightArmB,     tmotorVex393HighSpeed_MC29, openLoop)
#pragma config(Motor,  port9,           leftArmB,      tmotorVex393HighSpeed_MC29, openLoop, reversed)
#pragma config(Motor,  port10,          rightArmT,     tmotorVex393HighSpeed_HBridge, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

task main(){

	int leftSpeed;
	int rightSpeed;
	int armBaseSpeed;
	int grabberSpeed;
	int mobileSpeed;

	while (true)
	{
		//First remote function: Controls wheels

		//Controls the right wheels
		if (vexRT[Ch2] > -35 && vexRT[Ch2] < 35)
		{
			rightSpeed = 0;
		}
		else
		{
			rightSpeed = vexRT[Ch2];
		}

		//Controls the left wheels
		if (vexRT[Ch3] > -35 && vexRT[Ch3] < 35)
		{
			leftSpeed = 0;
		}
		else
		{
			leftSpeed = vexRT[Ch3];
		}

		//Second remote function: Controls arm, mobile goal, and claw movement

		//Controls arm movement
		if (Btn6UXmtr2 == 1 && SensorValue[liftAngle] > 1900)
		{
			armBaseSpeed = -60;
			grabberSpeed = 0;
		}
		else if (Btn6DXmtr2 == 1 && SensorValue[liftAngle] < 1900)
		{
			armBaseSpeed = 60;
			grabberSpeed = 0;
		}

		//Controls claw movement
		if (Btn8UXmtr2 == 1)
		{
			grabberSpeed = 30;
		}
		else if (Btn8DXmtr2 == 1)
		{
			grabberSpeed = -30;
		}
		else
		{
			grabberSpeed = 0;
		}

		//Controls mobile goal movement
		if (Btn5UXmtr2 == 1)
		{
			mobileSpeed = 127;
		}
		else if (Btn5DXmtr2 == 1)
		{
			mobileSpeed = -127;
		}

		motor[leftFront] = leftSpeed;
		motor[leftBack] = leftSpeed;
		motor[rightFront] = rightSpeed;
		motor[rightBack] = rightSpeed;
		motor[rightArmT] = armBaseSpeed;
		motor[rightArmB] = armBaseSpeed;
		motor[leftArmT] = armBaseSpeed;
		motor[leftArmB] = armBaseSpeed;
		motor[frontMotor] = grabberSpeed;
		motor[mobileLift] = mobileSpeed;

	}
}
