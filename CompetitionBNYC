int leftSpeed;

	int rightSpeed;

	int armBaseSpeed;

	int grabberSpeed;

	int mobileSpeed;

	SensorValue[rightEncoder] = 0;
	SensorValue[leftEncoder] = 0;

	//Keep Grabber on the whole time
	motor[frontMotor] = -127;

	//Move Arm back for Preload
	liftArm(-80);
	wait1Msec(1200);
	liftArm(0);
	//Lower Mobile Goal Lift

	liftMobileArm(-127);
	wait1Msec(1500);
	liftMobileArm(0);

	//Move Forward Towards Mobile Goal
	while (4 * PI * (SensorValue[rightEncoder] / 360) < 32) {
		moveForward(80);
	}
	moveForward(0);

	//Raise Mobile Goal Lift
	liftMobileArm(127);
	wait1Msec(1500);
	liftMobileArm(0);

	//Stack Preload
	liftArm(80);
	wait1Msec(1000);
	liftArm(0);
	
	//Move Backwards
	while (4 * PI * (SensorValue[rightEncoder] / 360) > 0) {
		moveForward(-80);
	}
	moveForward(0);
	SensorValue[gyro] = 0;
	//Turn right by 120 degrees
	while (abs(SensorValue[gyro]) < 1350) {
		motor[rightFront] = -50;
		motor[rightBack] = -50;
		motor[leftFront] = 50;
		motor[leftBack] = 50;
	}
	motor[rightFront] = 0;
	motor[rightBack] = 0;
	motor[leftFront] = 0;
	motor[leftBack] = 0;
	
	liftArm(-80);
	wait1Msec(1000);
	liftArm(0);
	
	liftMobileArm(-127);
	wait1Msec(1500);
	liftMobileArm(0);
	
	moveForward(-100);
	wait1Msec(2000);
	moveForward(0);
